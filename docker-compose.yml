version: '3'

services:

  database-layer:
    image: postgres
    container_name: inventory-management-db
    environment:
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=dbpassword
      - POSTGRES_DB=dbname
    volumes:
      - database-volume:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - shared-network
    restart: on-failure


  inventory-management-api:
    depends_on:
      - database-layer
    environment:
      - NODE_ENV=development
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    container_name: inventory-management-api
    expose:
      - '4000'
    ports:
      - '4000:4000'
    command: npm run dev
    networks:
      - shared-network
    restart: on-failure


  adminer:
    image: adminer
    container_name: adminer-docker
    depends_on:
      - database-layer
    ports:
      - '8080:8080'
    networks:
      - shared-network
    restart: on-failure


  pgadmin:
    container_name: pg-admin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
    depends_on:
      - database-layer
    ports:
      - '8081:80'
    networks:
      - shared-network


volumes:
  database-volume:


networks:
  shared-network:
